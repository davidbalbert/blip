Extracted from https://github.com/rakudo/rakudo/blob/main/src/Raku/Grammar.nqp. Raku has tons of good words.

sym<reduce>
sym<default>
sym<CATCH>
sym<CONTROL>
sym<given>
sym<when>
sym<while>
sym<unless>
sym<without>
sym<if>
sym<for>
sym<repeat>
sym<whenever>
sym<loop>
sym<foreach>
sym<also>
sym<no>
sym<use>
sym<need>
sym<import>
sym<require>
sym<if>
sym<unless>
sym<when>
sym<with>
sym<without>
sym<for>
sym<given>
sym<until>
sym<while>
sym<BEGIN>
sym<CHECK>
sym<CLOSE>
sym<END>
sym<ENTER>
sym<FIRST>
sym<INIT>
sym<KEEP>
sym<LAST>
sym<LEAVE>
sym<NEXT>
sym<POST>
sym<PRE>
sym<QUIT>
sym<TEMP>
sym<UNDO>
sym<DOC>
sym<do>
sym<eager>
sym<sink>
sym<gather>
sym<once>
sym<quietly>
sym<start>
sym<try>
sym<hyper>
sym<lazy>
sym<race>
sym<react>
sym<supply>
sym<!>
sym<R>
sym<S>
sym<X>
sym<Z>
sym<=>
sym<« »>
sym<«>
sym<»>
sym<( )>
sym<[ ]>
sym<{ }>
sym<ang>
sym<« »>
sym<.>
sym<.^>
sym<.?>
sym<.&>
sym<.+>
sym<.*>
sym<.=>
sym<i>
sym<ⁿ>
sym<+>
sym<++>
sym<-->
sym<⚛++>
sym<⚛-->
sym<++>
sym<-->
sym<++⚛>
sym<--⚛>
sym<~~>
sym<??>
sym<^^>
sym<?>
sym<!>
sym<+>
sym<~>
sym<->
sym<−>
sym<|>
sym<+^>
sym<~^>
sym<?^>
sym<⚛>
sym<^>
sym<let>
sym<temp>
sym<so>
sym<not>
sym<after>
sym<and>
sym<andthen>
sym<before>
sym<but>
sym<cmp>
sym<(cont)>
sym<coll>
sym<div>
sym<does>
sym<(elem)>
sym<eq>
sym<eqv>
sym<ff>
sym<^ff>
sym<ff^>
sym<^ff^>
sym<fff>
sym<^fff>
sym<fff^>
sym<^fff^>
sym<gcd>
sym<ge>
sym<gt>
sym<lcm>
sym<le>
sym<leg>
sym<lt>
sym<max>
sym<min>
sym<minmax>
sym<mod>
sym<ne>
sym<notandthen>
sym<or>
sym<orelse>
sym<unicmp>
sym<x>
sym<xor>
sym<xx>
sym<**>
sym<.>
sym<.=>
sym<:=>
sym<::=>
sym<%%>
sym<?&>
sym<*>
sym<×>
sym</>
sym<÷>
sym<%>
sym<+&>
sym<~&>
sym<->
sym<?|>
sym<?^>
sym<−>
sym<+>
sym<+|>
sym<+^>
sym<~|>
sym<~^>
sym<~>
sym<∘>
sym<o>
sym<&>
sym<(&)>
sym<(.)>
sym<|>
sym<^>
sym<(|)>
sym<(^)>
sym<(+)>
sym<(-)>
sym<===>
sym<~~>
sym<!~~>
sym<&&>
sym<||>
sym<//>
sym<^^>
sym<?? !!>
sym<,>
sym<:>
sym<X>
sym<Z>
sym<...>
sym<…>
sym<...^>
sym<…^>
sym<^...>
sym<^…>
sym<^...^>
sym<^…^>
sym<?>
sym<=>
sym<⚛=>
sym<⚛+=>
sym<⚛-=>
sym<⚛−=>
sym<..>
sym<^..>
sym<..^>
sym<^..^>
sym<!~>
sym<=~>
sym<( )>
sym<[ ]>
sym<{ }>
sym<ang>
sym<« »>
sym<circumfix>
sym<self>
sym<now>
sym<time>
sym<nano>
sym<empty_set>
sym<rand>
sym<...>
sym<???>
sym<!!!>
sym<undef>
sym<new>
sym<fatarrow>
sym<colonpair>
sym<variable>
sym<package-declarator>
sym<scope-declarator>
sym<routine-declarator>
sym<regex-declarator>
sym<statement-prefix>
sym<type-declarator>
sym<multi-declarator>
sym<*>
sym<**>
sym<lambda>
sym<value>
sym<::?IDENT>
sym<p5end>
sym<p5data>
sym<identifier>
sym<nqp::op>
sym<nqp::const>
sym<name>
sym<dotty>
sym<capture>
sym<onlystar>
sym<reduce>
sym<$!{ }>
sym<$`>
sym<$@>
sym<$#>
sym<$$>
sym<$&>
sym<@+>
sym<%+>
sym<$+[ ]>
sym<@+[ ]>
sym<@+{ }>
sym<@->
sym<%->
sym<$-[ ]>
sym<@-[ ]>
sym<%-{ }>
sym<$/>
sym<$\\>
sym<$|>
sym<$;>
sym<$'>
sym<$">
sym<$,>
sym<$.>
sym<$?>
sym<$]>
sym<${ }>
sym<package>
sym<module>
sym<class>
sym<grammar>
sym<role>
sym<knowhow>
sym<native>
sym<my>
sym<our>
sym<has>
sym<HAS>
sym<anon>
sym<state>
sym<unit>
sym<augment>
sym<supersede>
sym<multi>
sym<proto>
sym<only>
sym<null>
sym<=>
sym<:=>
sym<::=>
sym<.=>
sym<sub>
sym<method>
sym<submethod>
sym<rule>
sym<token>
sym<regex>
sym<constant>
sym<enum>
sym<subset>
sym<is>
sym<hides>
sym<does>
sym<will>
sym<of>
sym<returns>
sym<handles>
sym<quote>
sym<number>
sym<version>
sym<numish>
sym<apos>
sym<sapos>
sym<lapos>
sym<hapos>
sym<dblq>
sym<sdblq>
sym<ldblq>
sym<hdblq>
sym<crnr>
sym<q>
sym<qq>
sym<Q>
sym<w>
sym<ww>
sym<x>
sym<to>
sym<s>
sym<a>
sym<h>
sym<f>
sym<c>
sym<b>
sym<o>
sym</null/>
sym</ />
sym<rx>
sym<m>
sym<ms>
sym<s>
sym<ss>
sym<S>
sym<Ss>
sym<qr>
sym<.>
sym<!>
sym<^>
sym<:>
sym<*>
sym<?>
sym<=>
sym<~>
sym<;>
sym<)>
sym<]>
sym<}>
sym<ang>
sym<if>
sym<unless>
sym<while>
sym<until>
sym<for>
sym<given>
sym<when>
sym<with>
sym<without>
sym<arrow>
sym<blah>
sym<$opname>
sym<>
sym<#>
sym<#`(...)>
sym<#`>
sym<#|>
sym<#|(...)>
sym<#=>
sym<#=(...)>
sym<finish>
sym<alias>
sym<column>
sym<row>
sym<place>
sym<formula>
sym<config>
sym<verbatim>
sym<begin>
sym<for>
sym<abbreviated>
sym<lines>
sym<a>
sym<b>
sym<e>
sym<f>
sym<n>
sym<r>
sym<t>
sym<0>
sym<\\>
sym<rn>
sym<misc>
sym<qq>
sym<c>
sym<N>
sym<o>
sym<x>
sym<1>
sym<unrec>
sym<\\>
sym<\\>
sym<$>
sym<$>
sym<@>
sym<@>
sym<%>
sym<%>
sym<&>
sym<&>
sym<{ }>
sym<{ }>
sym<'>
sym<colonpair>
sym<#>
sym<\\>
sym<qq>
sym<\\>
sym<miscq>
sym<:my>
sym<{ }>
sym<var>
sym<rakvar>
sym<qw>
sym<'>
sym<{}>
sym<mod>
sym<1>
sym<name>
sym<{ }>
sym<?{ }>
sym<!{ }>
sym<var>
sym<variable>
sym<variable>
sym<~~>
sym<(?{ })>
sym<(??{ })>
sym<var>
